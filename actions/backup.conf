Phase: actions
Target path: {{$void}}
Command prefix: #
# action Backup
#!/usr/bin/env sh

if [[ -z "$1" ]]; then
    echo "You need to give the path to the borg repo"
    exit 1
fi

# Setting this, so the repo does not need to be given on the commandline:
export BORG_REPO=$1

# some helpers and error handling:
info() { printf "\n%s %s\n\n" "$( date )" "$*" >&2; }
trap 'echo $( date ) Backup interrupted >&2; exit 2' INT TERM

info "Starting backup"

cd ~
info "Went to the home dir"

# Backup the most important directories into an archive named after
# the machine this script is currently running on:

borg create                           \
    --verbose                         \
    --filter AME                      \
    --list                            \
    --stats                           \
    --show-rc                         \
    --compression lz4                 \
    --exclude-caches                  \
    --exclude '/home/*/.cache/*'      \
    --exclude '/var/cache/*'          \
    --exclude '/var/tmp/*'            \
                                      \
    ::'{hostname}-{now}'              \
    .XCompose                         \
    .mozilla                          \
    .scripts                          \
    .ssh                              \
    .ssh_aliases                      \
    .thunderbird                      \
    .vim/snippets                     \
    GRUB_WALLPAPER                    \
    Programming                       \
    Schule                            \
    Uni                               \
    WALLPAPERS                        \
    general_storage/Cooking           \
    general_storage/Docs_And_Articles \
    general_storage/Handy             \
    general_storage/Music             \
    general_storage/PGP               \
    general_storage/keepass           \

backup_exit=$?

info "Pruning repository"

# Use the `prune` subcommand to maintain 7 daily, 4 weekly and 6 monthly
# archives of THIS machine. The '{hostname}-' prefix is very important to
# limit prune's operation to this machine's archives and not apply to
# other machines' archives also:

borg prune                          \
    --list                          \
    --prefix '{hostname}-'          \
    --show-rc                       \
    --keep-daily    7               \
    --keep-weekly   4               \
    --keep-monthly  6               \
    --keep-yearly   3               \

prune_exit=$?

# use highest exit code as global exit code
global_exit=$(( backup_exit > prune_exit ? backup_exit : prune_exit ))

if [ ${global_exit} -eq 1 ];
then
    info "Backup and/or Prune finished with a warning"
fi

if [ ${global_exit} -gt 1 ];
then
    info "Backup and/or Prune finished with an error"
fi

exit ${global_exit}
# end action
